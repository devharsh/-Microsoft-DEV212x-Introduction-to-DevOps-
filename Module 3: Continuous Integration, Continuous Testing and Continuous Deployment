Question 1
(10/10 points)

Which two of the following statements describe the benefits of “Continuous Delivery (CD)”?

-> CD ensures that code is tested frequently before being deployed to production.
-> CD ensures that source code is committed to the source repository before being deployed.

Explanation

Continuous Delivery ensures code is tested frequently as builds and deployments (with associated tests) occur frequently. Additionally, since build and deployment is done from a source repository, both code and configuration need to be source controlled in order to impact a deployment environment.

Continuous Delivery does not validate that every code change is properly reviewed, or that developers code to specifications.

---

Question 2
(10/10 points)

Which statement below accurately describes "Continuous Integration (CI)"?

-> Every checkin triggers a build that builds and tests the code.

Explanation

Continuous Integration implies the integration of all code lines into a single, merged branch on a very regular basis. In practice, it also generally includes a build and set of tests that run at every commit.

Continuous Integration does not imply, however, that testing or deployment is done every day, or that a code review is performed at every checkin.

---

Question 3
(10/10 points)

Which type of tests are typically run during a Continuous Integration (CI) build?

-> Unit tests

Explanation

Unit tests are typically run during a Continuous Integration build.

CI builds are generally part of the Build Pipeline, instead of the Deployment Pipeline. So integration, load and user acceptance tests cannot be run since they generally depend on a deployed application.

---

Question 4
(10/10 points)

Which three of the following are components of a Build Pipeline?

-> Trigger - an event that initiates the build pipeline, for instance a code commit or schedule
-> Unit Tests - fast, automated tests that are run to validate code correctness
-> Packaging - application binaries and/or code is consolidated into a deployable package

Explanation

A Build Pipeline commonly includes triggers, a set of steps or tasks (sometime scripts), unit tests, code analysis, and packaging/versioning. These all occur prior to deployment into an environment.

Load tests would not be part of a build pipeline, since load tests must be executed against an environment that contains the build. Generally, load tests would be run in a release pipeline, instead. This is true even if the same tool is used to create both the build and release pipelines.

---

Question 5
(10/10 points)

Which of the following definitions best describes “Integration Testing”?

-> Code is deployed and automated tests are run that span numerous systems, testing end to end functionality of a system.

Explanation

Integration Testing ensures that tests span multiple systems to verify the application is working as expected.

Unit tests, simulated users in a load test and manual testing are all important parts of a good quality assurance strategy. They may even participate in some integration tests. However, they are not part of the core definition of integration testing.
